# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.7.1
  cloudrun: circleci/gcp-cloud-run@1.0.2

jobs:
  test:
    docker:
      # specify the version
      - image: circleci/golang:1.14

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run:
          name: package tests
          command: |
            mkfifo /tmp/fifo-$$
            grep -v 'no test files' </tmp/fifo-$$ & go test ./... >/tmp/fifo-$$
            RES=$?
            rm /tmp/fifo-$$
            exit $RES
  build-and-push:
    machine: true
    steps:
      - checkout
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GCP_KEY
          google-project-id: PROJECT_ID
          google-compute-zone: GCP_ZONE
      - gcp-gcr/build-image:
          google-project-id: PROJECT_ID
          image: $SERVICE_NAME
          registry-url: "gcr.io"
      - gcp-gcr/push-image:
          image: $SERVICE_NAME
          registry-url: gcr.io
  deploy:
    machine: true
    steps:
      - checkout
      - cloudrun/deploy:
          platform: "managed"
          image: "gcr.io/$PROJECT_ID/$SERVICE_NAME"
          service-name: "orb-gcp-cloud-run"
          region: $GCP_ZONE
          unauthenticated: true

workflows:
  version: 2
  test-build-and-push:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
          #filters:
          #  branches:
          #    only: master
      - deploy:
          requires:
            - build-and-push
          #filters:
          # branches:
          #   only: master